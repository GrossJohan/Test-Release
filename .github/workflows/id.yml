name: Pivotal Tracker Story Type and Release

on:
  push:
    branches:
      - main

jobs:
  e2e_tests_and_release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Run Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          wait-on: 'http://localhost:3000'

      # Step 3: Upload Cypress artifacts (screenshots on failure)
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      # Step 4: Upload Cypress artifacts (videos on failure)
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

  get_story_type:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Commit Message
        id: get_commit_message
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "::set-output name=commit_message::$commit_message"

      - name: Extract Story ID
        id: extract_story_id
        run: |
          commit_message="${{ steps.get_commit_message.outputs.commit_message }}"
          story_id=$(echo "$commit_message" | grep -oP '#\d+' | sed 's/#//')
          echo "::set-output name=story_id::$story_id"

      - name: Make API Request to Pivotal Tracker
        id: pivotal_api_request
        run: |
          story_id="${{ steps.extract_story_id.outputs.story_id }}"
          pivotal_token="13c6a4cd8935a5188160900b446a1a07"
          
          # Make the API request to get the story type
          response=$(curl -s -H "X-TrackerToken: $pivotal_token" \
              "https://www.pivotaltracker.com/services/v5/projects/2674647/stories/$story_id")

          story_type=$(echo "$response" | jq -r '.story_type')
          echo "::set-output name=story_type::$story_type"

      - name: Display Story Type
        run: |
          story_type="${{ steps.pivotal_api_request.outputs.story_type }}"
          echo "Pivotal Tracker Story Type: $story_type"

  release:
    runs-on: ubuntu-latest
    needs: [get_story_type]

    steps:
      - name: Checkout code for Release
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Setup Node.js for Release
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install Dependencies for Release
        run: npm install
      - name: Get Version for Release
        id: package_version
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: false
      - name: Output Release URL
        run: echo "Release URL is ${{ steps.create_release.outputs.html_url }}"
